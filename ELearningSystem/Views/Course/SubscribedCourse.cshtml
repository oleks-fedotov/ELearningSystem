@model ELearningSystem.Models.SubscribedCourseDetailsModel

@{
    ViewBag.Title = Model.CourseName;
    AjaxOptions ajaxOpts = new AjaxOptions()
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "lectureContentContainer",
        OnSuccess = "showModal",
    };
}

@*<script src="http://netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js" type="text/javascript"></script>*@


<script type="text/javascript">
    var lecturesQuantity;
    function showModal() {
        $('#lectureModal').modal('show');
    };

    function saveLectureIdAndName(id, index) {
        $("#showedLectureIndex").val(index);
        $("#showedLectureId").val(id);
    }
    function getCurrentLectureId() {
        return $("#showedLectureId").val();
    }
    function getCurrentLectureIndex() {
        return $("#showedLectureIndex").val();
    }

    function setLectureId(command) {
        $("#prevLectureId").val($("#showedLectureId").val());
        $("#nextLectureId").val($("#showedLectureId").val());
        if (command == "prev") {
            GetAndSetPrevLectureId();
        }
        else {
            GetAndSetNextLectureId();
        }
    }
    function GetAndSetPrevLectureId() {
        $.ajax({
            url: "@Url.Action("AjaxGetPrevLectureId", "Lecture")",
            type: "POST",
            data: { lectureId: $("#showedLectureId").val() }
        })
        .done(function (data) {
            alert(data);
            $("#showedLectureId").val(data);
        });
    }
    function GetAndSetNextLectureId() {
        $.ajax({
            url: "@Url.Action("AjaxGetNextLectureId", "Lecture")",
            type: "POST",
            data: { lectureId: $("#showedLectureId").val() }
        })
        .done(function (data) {
            alert(data);
            $("#showedLectureId").val(data);
        });
    }

    function showLectureContent(id, name, index) {
        $.ajax({
            url: "@Url.Action("ShowLectureContent", "Lecture")",
            type: "POST",
            data: { lectureId: id }
        })
        .done(function (data) {
            $("#showPrevLectureBut").css("display","block");
            $("#showNextLectureBut").css("display", "block");
            if(index == 0)
            {
                $("#showPrevLectureBut").css("display","none");
            }
            if(index == lecturesQuantity)
            {
                $("#showNextLectureBut").css("display","none");
            }
            saveLectureIdAndName(id, index);
            $("#lectureTitle").text(name);
            $("#lectureContentContainer").html("");
            $("#lectureContentContainer").append(data);
            showModal();
        });
    }

    function showNextLecture() {
        var nextIndex = Number(getCurrentLectureIndex()) + 1;
        saveLectureAsRead(getCurrentLectureId(), getCurrentLectureIndex());
        var nextLectureName = getNextLectureName(nextIndex);
        var nextLectureId = getNextLectureId(nextIndex);
        showLectureContent(nextLectureId, nextLectureName, nextIndex);
    }

    function showPrevLecture() {
        var prevIndex = Number(getCurrentLectureIndex()) - 1;
        var prevLectureName = getNextLectureName(prevIndex);
        var prevLectureId = getNextLectureId(prevIndex);
        showLectureContent(prevLectureId, prevLectureName, prevIndex);
    }

    function saveLectureAsRead(id,index) {
        $.ajax({
            url: "@Url.Action("SaveLectureRead", "Lecture")",
            type: "POST",
            data: { lectureId: id }
        })
        .done(function () {
            $("#isLectureRead" + index).addClass("glyphicon glyphicon-check");
        });
    }

    function getNextLectureName(index) {
        return $("#lectureName" + index).val();
    }

    function getNextLectureId(index) {
        return $("#lectureId" + index).val();
    }

    function setLecturesQuantity(quantity) {
        lecturesQuantity = quantity;
    }
</script>


<h2>@Model.CourseName</h2>

<div class="col-sm-10">
    <input type="hidden" id="showedLectureIndex" />
    <input type="hidden" id="showedLectureId" />
    <div>
        <ul class="list-group">
            @{ int counter = 0; }
            @for (int i = 0; i < Model.Details.Count; i++)
            {
                
                <li class="list-group-item"><strong>@((i + 1).ToString() + ".") @Model.Details.ElementAt(i).Key</strong>
                    <ul style="list-style: none">
                        @for (int j = 0; j < Model.Details.ElementAt(i).Value.Count; j++)
                        {
                            string lectureName = Model.Details.ElementAt(i).Value[j].LectureName;
                            Guid lectureId = Model.Details.ElementAt(i).Value[j].LectureId;
                            <li class="row clearfix list-group-item">
                                <div class="">
                                    <div class="list-group">
                                        <div class="pull-left">
                                            @if (Model.Details.ElementAt(i).Value[j].IsLectureWatched)
                                            {
                                                <span id='@("isLectureRead"+@counter)' class="glyphicon glyphicon-check"></span>
                                            }
                                            else
                                            {
                                                <span id='@("isLectureRead"+@counter)'></span>
                                            }
                                            @((i + 1).ToString() + "." + (j + 1).ToString() + " " + lectureName)

                                        </div>
                                        <div class="pull-right">
                                            @using (Ajax.BeginForm("ShowLectureContent", "Lecture", ajaxOpts))
                                            {
                                                @Html.Hidden("lectureId", lectureId, new { id = ("lectureId" + counter.ToString()) })
                                                @Html.Hidden("lectureName", lectureName, new { id = ("lectureName" + counter) })
                                                @Html.Hidden("counter", counter, new { id = ("index" + counter) })
                                                <button type="submit" class="btn btn-xs btn" onclick="showLectureContent('@lectureId', '@lectureName', '@counter'); return false;">
                                                    <span class="glyphicon glyphicon-eye-open"></span>
                                                    &nbspWatch
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>

                            </li>
                                            counter++;
                        }
                    </ul>
                </li>
            }
            <script>
                setLecturesQuantity(@counter - 1);
            </script>
        </ul>
    </div>
    <div class="modal fade" id="lectureModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times</button>
                    <h3 id="lectureTitle">Lecture content</h3>
                </div>
                <div class="modal-body" id="lectureContentContainer">
                </div>
                <div class="modal-footer clearfix">
                    <div class="pull-left">
                        @using (Ajax.BeginForm("ShowPrevLecture", "Lecture", ajaxOpts))
                        {
                            @Html.Hidden("lectureId", "", new { id = "prevLectureId" })
                            <button type="submit" class="btn btn-xl" onclick="showPrevLecture(); return false;" id="showPrevLectureBut">
                                <span class="glyphicon glyphicon-backward"></span>
                                &nbspPrevious
                            </button>
                        }
                    </div>
                    <div class="pull-right">
                        @using (Ajax.BeginForm("ShowNextLecture", "Lecture", ajaxOpts))
                        {
                            @Html.Hidden("lectureId", "", new { id = "nextLectureId" })
                            <button type="submit" class="btn btn-xl" onclick="showNextLecture(); return false;" id="showNextLectureBut">
                                Next&nbsp
                                <span class="glyphicon glyphicon-forward"></span>
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
